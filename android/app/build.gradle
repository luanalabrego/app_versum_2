plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
}

import java.util.Properties

def localProps = new Properties()
def lpFile = rootProject.file('local.properties')
if (lpFile.exists()) {
    lpFile.withReader('UTF-8') { r -> localProps.load(r) }
}
def flutterVersionCode = (localProps.getProperty('flutter.versionCode') ?: '1')
def flutterVersionName = (localProps.getProperty('flutter.versionName') ?: '1.0')

// Keystore (opcional)
def keyProps = new Properties()
def kpFile = rootProject.file('key.properties')
if (kpFile.exists()) {
    keyProps.load(new FileInputStream(kpFile))
}

android {
    namespace "br.com.massdev.appversum"
    compileSdk = 36

    defaultConfig {
        applicationId "br.com.massdev.appversum"

        minSdkVersion flutter.minSdkVersion

        targetSdk = 36
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
        coreLibraryDesugaringEnabled true
    }
    kotlinOptions {
        jvmTarget = "17"
        freeCompilerArgs += ["-Xjvm-default=all"]
    }
    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }

    signingConfigs {
        release {
            if (kpFile.exists()) {
                storeFile     file(keyProps['storeFile'])
                storePassword keyProps['storePassword']
                keyAlias      keyProps['keyAlias']
                keyPassword   keyProps['keyPassword']
            }
        }
    }

    buildTypes {
        release {
            if (kpFile.exists()) {
                signingConfig signingConfigs.release
            }
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            // padr√£o
        }
    }

    packagingOptions {
        resources {
            excludes += ["/META-INF/{AL2.0,LGPL2.1}", "META-INF/LICENSE*", "META-INF/NOTICE*"]
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:2.1.4"

    implementation "com.google.android.gms:play-services-ads-identifier:18.0.0"
}
